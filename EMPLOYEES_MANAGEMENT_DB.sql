USE MASTER
IF EXISTS (SELECT name FROM master.dbo.sysdatabases WHERE name = 'EmployeesManagement')
BEGIN
	ALTER DATABASE EmployeesManagement SET OFFLINE WITH ROLLBACK IMMEDIATE;
	ALTER DATABASE EmployeesManagement SET ONLINE;
	DROP DATABASE EmployeesManagement;
END 

CREATE DATABASE EmployeesManagement;
GO
USE EmployeesManagement;
GO

CREATE TABLE ACCOUNT (
	USERNAME nvarchar(50) PRIMARY KEY,
	[PASSWORD] nvarchar(80) NOT NULL,
	EMAIL nvarchar(80) NOT NULL,	
	FULL_NAME nvarchar(80) NOT NULL,
	PHONE_NUMBER nvarchar(80) NOT NULL,
	[ROLE] nvarchar(10) NOT NULL CONSTRAINT CHECK_ROLE CHECK ([ROLE] IN ('User', 'Manager', 'Admin')),
	CREATED_DATE datetime,
	UPDATED_DATE datetime,
	DELETE_FLAG int NOT NULL DEFAULT 0 CONSTRAINT Check_SoLuongSach CHECK (DELETE_FLAG IN (0, 1)),
	ADDRESS_ID int
);
GO

CREATE TABLE [ADDRESS] (
	ADDRESS_ID int IDENTITY (1, 1) PRIMARY KEY,
	STREET nvarchar(50) NOT NULL,
	PROVINCE nvarchar(50) NOT NULL,
	CITY nvarchar(50) NOT NULL,
	WARD nvarchar(50) NOT NULL,
	UPDATED_DATE datetime
);
GO

CREATE TABLE DEPARTMENT (
	DEPARTMENT_ID int IDENTITY (1, 1) PRIMARY KEY,	
	DEPARTMENT_NAME nvarchar(50) NOT NULL,	
);
GO

CREATE TABLE JOB (
	JOB_ID int IDENTITY (1, 1) PRIMARY KEY,	
	JOB_TITLE nvarchar(50) NOT NULL,	
	SALARY int NOT NULL,	
	UPDATED_DATE datetime
);
GO


CREATE TABLE EMPLOYEE (
	EMPLOYEE_ID int IDENTITY (1, 1) PRIMARY KEY,
	HIRED_DATE DATE NOT NULL,
	USERNAME nvarchar(50) NOT NULL,
	DEPARTMENT_ID int NOT NULL,
	JOB_ID int NOT NULL,
);
GO

CREATE TABLE JOB_HISTORY (
	JOB_HISTORY_ID int IDENTITY (1, 1) PRIMARY KEY,	
	STARTED_DATE DATE NOT NULL,
	ENDED_DATE DATE,
	JOB_ID int NOT NULL,
	DEPARTMENT_ID int NOT NULL,
	EMPLOYEE_ID int NOT NULL
);
GO

ALTER TABLE ACCOUNT ADD CONSTRAINT FK_ACCOUNT_ADDRESS
					   FOREIGN KEY(ADDRESS_ID) REFERENCES [ADDRESS](ADDRESS_ID) 
GO

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_ACCOUNT
					   FOREIGN KEY(USERNAME) REFERENCES ACCOUNT(USERNAME) 
GO

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_DEPARTMENT
					   FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID) 
GO

ALTER TABLE EMPLOYEE ADD CONSTRAINT FK_EMPLOYEE_JOB
					   FOREIGN KEY(JOB_ID) REFERENCES JOB(JOB_ID) 
GO

ALTER TABLE JOB_HISTORY ADD CONSTRAINT FK_JOB_HISTORY_JOB
					   FOREIGN KEY(JOB_ID) REFERENCES JOB(JOB_ID) 
GO

ALTER TABLE JOB_HISTORY ADD CONSTRAINT FK_JOB_HISTORY_DEPARTMENT
					   FOREIGN KEY(DEPARTMENT_ID) REFERENCES DEPARTMENT(DEPARTMENT_ID) 					   
GO

ALTER TABLE JOB_HISTORY ADD CONSTRAINT FK_JOB_HISTORY_EMPLOYEE
					   FOREIGN KEY(EMPLOYEE_ID) REFERENCES EMPLOYEE(EMPLOYEE_ID) 					   
GO


CREATE TRIGGER TRG_ACCOUNT_CREATED_DATE
ON ACCOUNT
AFTER INSERT
AS
BEGIN
    UPDATE A
    SET CREATED_DATE = GETDATE()
    FROM ACCOUNT A
    INNER JOIN INSERTED i ON A.USERNAME = i.USERNAME;
END;

GO

CREATE TRIGGER TRG_ACCOUNT_UPDATED_DATE
ON ACCOUNT
AFTER UPDATE
AS
BEGIN
    UPDATE A
    SET UPDATED_DATE = GETDATE()
    FROM ACCOUNT A
    INNER JOIN INSERTED i ON A.USERNAME = i.USERNAME;
END;
GO

CREATE TRIGGER TRG_ADDRESS_UPDATED_DATE
ON [ADDRESS]
AFTER UPDATE
AS
BEGIN
    UPDATE A
    SET UPDATED_DATE = GETDATE()
    FROM [ADDRESS] A
    INNER JOIN INSERTED i ON A.ADDRESS_ID = i.ADDRESS_ID;
END;
GO

CREATE TRIGGER TRG_JOB_UPDATED_DATE
ON JOB
AFTER UPDATE
AS
BEGIN
    UPDATE J
    SET UPDATED_DATE = GETDATE()
    FROM JOB J
    INNER JOIN INSERTED i ON J.JOB_ID = i.JOB_ID;
END;
GO

INSERT INTO ACCOUNT (
    USERNAME,
    [PASSWORD],
    EMAIL,
    FULL_NAME,
    PHONE_NUMBER,
    [ROLE]
) VALUES (
    'tienph',
    '12345678',
    'tienph@gmail.com',
    'Pham Hoang Tien',
    '123456789',
    'User'
);

INSERT INTO ACCOUNT (
    USERNAME,
    [PASSWORD],
    EMAIL,
    FULL_NAME,
    PHONE_NUMBER,
    [ROLE]
) VALUES (
    'tupht',
    '12345678',
    'tupht@gmail.com',
    'Pham Hoang Thanh Tu',
    '123456789',
    'User'
);


INSERT INTO ACCOUNT (
    USERNAME,
    [PASSWORD],
    EMAIL,
    FULL_NAME,
    PHONE_NUMBER,
    [ROLE]
) VALUES (
    'manager',
    '12345678',
    'manager@gmail.com',
    'Pham Hoang Tien',
    '123456789',
    'Manager'
);

INSERT INTO ACCOUNT (
    USERNAME,
    [PASSWORD],
    EMAIL,
    FULL_NAME,
    PHONE_NUMBER,
    [ROLE]
) VALUES (
    'admin',
    '12345678',
    'admin@gmail.com',
    'Pham Hoang Tien',
    '123456789',
    'Admin'
);

INSERT INTO JOB (JOB_TITLE, SALARY)
VALUES 
    ('Developer', 1500),
    ('Data Analyst', 1200),
    ('Project Manager', 2000),
	('Sales Representative', 1000),
	('Marketing Specialist', 1100);	
INSERT INTO DEPARTMENT (DEPARTMENT_NAME)
VALUES 
    ('Human Resources'),
    ('Sales'),
    ('Marketing'),
	('Software Engineer');